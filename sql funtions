CREATE DATABASE jewelrystore_db;
USE jewelrystore_db;
CREATE TABLE item(ItemID INT, Name VARCHAR(150), Cost INT, PRIMARY KEY(ItemID));
INSERT INTO item VALUES(1,'Engagement ring',2500),(2,'Silver brooch',400),(3,'Earrings',350),(4,'Luxury watch',1250),(5,'Golden bracelet',800), (6,'Gemstone',1500);
CREATE TABLE mg_orders(OrderID INT, ItemID INT, Quantity INT, Cost INT, OrderDate DATE, DeliveryDate DATE, OrderStatus VARCHAR(50), PRIMARY KEY(OrderID));
INSERT INTO mg_orders VALUES(1,1,50,122000,'2022-04-05','2022-05-25', 'Delivered'),(2,2,75,28000,'2022-03-08',NULL, 'In progress'), (3,3,80,25000,'2022-05-19','2022-06-08', 'Delivered'), (4,4,45,100000,'2022-01-10',NULL, 'In progress'),(5,5,70,56000,'2022-05-19',NULL, 'In progress'),(6,6,60,90000,'2022-06-10','2022-06-18', 'Delivered');
SELECT * FROM item;
+--------+-----------------+------+
| ItemID | Name            | Cost |
+--------+-----------------+------+
|      1 | Engagement ring | 2500 |
|      2 | Silver brooch   |  400 |
|      3 | Earrings        |  350 |
|      4 | Luxury watch    | 1250 |
|      5 | Golden bracelet |  800 |
|      6 | Gemstone        | 1500 |
+--------+-----------------+------+
6 rows in set (0.00 sec)

mysql> SELECT * FROM mg_orders;
+---------+--------+----------+--------+------------+--------------+-------------+
| OrderID | ItemID | Quantity | Cost   | OrderDate  | DeliveryDate | OrderStatus |
+---------+--------+----------+--------+------------+--------------+-------------+
|       1 |      1 |       50 | 122000 | 2022-04-05 | 2022-05-25   | Delivered   |
|       2 |      2 |       75 |  28000 | 2022-03-08 | NULL         | In progress |
|       3 |      3 |       80 |  25000 | 2022-05-19 | 2022-06-08   | Delivered   |
|       4 |      4 |       45 | 100000 | 2022-01-10 | NULL         | In progress |
|       5 |      5 |       70 |  56000 | 2022-05-19 | NULL         | In progress |
|       6 |      6 |       60 |  90000 | 2022-06-10 | 2022-06-18   | Delivered   |
+---------+--------+----------+--------+------------+--------------+-------------+
6 rows in set (0.00 sec)

-- create new item name name-quantity-orderstatus
SELECT CONCAT(LCASE(Name),'-', Quantity, '-', UCASE(OrderStatus)) AS 'name-quantity-orderstatus' FROM item, mg_orders WHERE item.ItemID = mg_orders.ItemID;
+--------------------------------+
| name-quantity-orderstatus      |
+--------------------------------+
| engagement ring-50-DELIVERED   |
| silver brooch-75-IN PROGRESS   |
| earrings-80-DELIVERED          |
| luxury watch-45-IN PROGRESS    |
| golden bracelet-70-IN PROGRESS |
| gemstone-60-DELIVERED          |
+--------------------------------+
6 rows in set (0.00 sec)

-- find the name of the weekday on which M&Gâ€™s orders are to be delivered.
SELECT *, DATE_FORMAT(DeliveryDate, '%W') AS Weekday FROM mg_orders;

+---------+--------+----------+--------+------------+--------------+-------------+-----------+
| OrderID | ItemID | Quantity | Cost   | OrderDate  | DeliveryDate | OrderStatus | Weekday   |
+---------+--------+----------+--------+------------+--------------+-------------+-----------+
|       1 |      1 |       50 | 122000 | 2022-04-05 | 2022-05-25   | Delivered   | Wednesday |
|       2 |      2 |       75 |  28000 | 2022-03-08 | NULL         | In progress | NULL      |
|       3 |      3 |       80 |  25000 | 2022-05-19 | 2022-06-08   | Delivered   | Wednesday |
|       4 |      4 |       45 | 100000 | 2022-01-10 | NULL         | In progress | NULL      |
|       5 |      5 |       70 |  56000 | 2022-05-19 | NULL         | In progress | NULL      |
|       6 |      6 |       60 |  90000 | 2022-06-10 | 2022-06-18   | Delivered   | Saturday  |
+---------+--------+----------+--------+------------+--------------+-------------+-----------+
6 rows in set (0.00 sec)
-- calculates the cost of handling each order. This should be 5% of the total order cost. Use an appropriate math function to round that value to 2 decimal places.
SELECT *, ROUND(Cost*5/100,2) AS Handlingcost FROM mg_orders;
+---------+--------+----------+--------+------------+--------------+-------------+--------------+
| OrderID | ItemID | Quantity | Cost   | OrderDate  | DeliveryDate | OrderStatus | Handlingcost |
+---------+--------+----------+--------+------------+--------------+-------------+--------------+
|       1 |      1 |       50 | 122000 | 2022-04-05 | 2022-05-25   | Delivered   |      6100.00 |
|       2 |      2 |       75 |  28000 | 2022-03-08 | NULL         | In progress |      1400.00 |
|       3 |      3 |       80 |  25000 | 2022-05-19 | 2022-06-08   | Delivered   |      1250.00 |
|       4 |      4 |       45 | 100000 | 2022-01-10 | NULL         | In progress |      5000.00 |
|       5 |      5 |       70 |  56000 | 2022-05-19 | NULL         | In progress |      2800.00 |
|       6 |      6 |       60 |  90000 | 2022-06-10 | 2022-06-18   | Delivered   |      4500.00 |
+---------+--------+----------+--------+------------+--------------+-------------+--------------+
6 rows in set (0.00 sec)

-- filter out the records that do not have a NULL value in the delivery date column.
SELECT *, DATE_FORMAT(DeliveryDate, '%W') AS Weekday FROM mg_orders WHERE DeliveryDate IS NOT NULL;
+---------+--------+----------+--------+------------+--------------+-------------+-----------+
| OrderID | ItemID | Quantity | Cost   | OrderDate  | DeliveryDate | OrderStatus | Weekday   |
+---------+--------+----------+--------+------------+--------------+-------------+-----------+
|       1 |      1 |       50 | 122000 | 2022-04-05 | 2022-05-25   | Delivered   | Wednesday |
|       3 |      3 |       80 |  25000 | 2022-05-19 | 2022-06-08   | Delivered   | Wednesday |
|       6 |      6 |       60 |  90000 | 2022-06-10 | 2022-06-18   | Delivered   | Saturday  |
+---------+--------+----------+--------+------------+--------------+-------------+-----------+
3 rows in set (0.00 sec)
